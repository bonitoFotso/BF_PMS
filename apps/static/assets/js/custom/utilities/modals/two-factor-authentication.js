/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "../demo41/src/js/custom/utilities/modals/two-factor-authentication.js":
/*!*****************************************************************************!*\
  !*** ../demo41/src/js/custom/utilities/modals/two-factor-authentication.js ***!
  \*****************************************************************************/
/***/ (() => {

eval("\n\n// Class definition\nvar KTModalTwoFactorAuthentication = function () {\n    // Private variables\n    var modal;\n    var modalObject;\n\n    var optionsWrapper;\n    var optionsSelectButton;\n\n    var smsWrapper;\n    var smsForm;\n    var smsSubmitButton;\n    var smsCancelButton;\n    var smsValidator;\n\n    var appsWrapper;\n    var appsForm;\n    var appsSubmitButton;\n    var appsCancelButton;\n    var appsValidator;\n\n    // Private functions\n    var handleOptionsForm = function() {\n        // Handle options selection\n        optionsSelectButton.addEventListener('click', function (e) {\n            e.preventDefault();\n            var option = optionsWrapper.querySelector('[name=\"auth_option\"]:checked');\n\n            optionsWrapper.classList.add('d-none');\n\n            if (option.value == 'sms') {\n                smsWrapper.classList.remove('d-none');\n            } else {\n                appsWrapper.classList.remove('d-none');\n            }\n        });\n    }\n\n\tvar showOptionsForm = function() {\n\t\toptionsWrapper.classList.remove('d-none');\n\t\tsmsWrapper.classList.add('d-none');\n\t\tappsWrapper.classList.add('d-none');\n    }\n\n    var handleSMSForm = function() {\n        // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\n\t\tsmsValidator = FormValidation.formValidation(\n\t\t\tsmsForm,\n\t\t\t{\n\t\t\t\tfields: {\n\t\t\t\t\t'mobile': {\n\t\t\t\t\t\tvalidators: {\n\t\t\t\t\t\t\tnotEmpty: {\n\t\t\t\t\t\t\t\tmessage: 'Mobile no is required'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tplugins: {\n\t\t\t\t\ttrigger: new FormValidation.plugins.Trigger(),\n\t\t\t\t\tbootstrap: new FormValidation.plugins.Bootstrap5({\n\t\t\t\t\t\trowSelector: '.fv-row',\n                        eleInvalidClass: '',\n                        eleValidClass: ''\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n        // Handle apps submition\n        smsSubmitButton.addEventListener('click', function (e) {\n            e.preventDefault();\n\n\t\t\t// Validate form before submit\n\t\t\tif (smsValidator) {\n\t\t\t\tsmsValidator.validate().then(function (status) {\n\t\t\t\t\tconsole.log('validated!');\n\n\t\t\t\t\tif (status == 'Valid') {\n\t\t\t\t\t\t// Show loading indication\n\t\t\t\t\t\tsmsSubmitButton.setAttribute('data-kt-indicator', 'on');\n\n\t\t\t\t\t\t// Disable button to avoid multiple click \n\t\t\t\t\t\tsmsSubmitButton.disabled = true;\t\t\t\t\t\t\n\n\t\t\t\t\t\t// Simulate ajax process\n\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\t// Remove loading indication\n\t\t\t\t\t\t\tsmsSubmitButton.removeAttribute('data-kt-indicator');\n\n\t\t\t\t\t\t\t// Enable button\n\t\t\t\t\t\t\tsmsSubmitButton.disabled = false;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Show success message. For more info check the plugin's official documentation: https://sweetalert2.github.io/\n\t\t\t\t\t\t\tSwal.fire({\n\t\t\t\t\t\t\t\ttext: \"Mobile number has been successfully submitted!\",\n\t\t\t\t\t\t\t\ticon: \"success\",\n\t\t\t\t\t\t\t\tbuttonsStyling: false,\n\t\t\t\t\t\t\t\tconfirmButtonText: \"Ok, got it!\",\n\t\t\t\t\t\t\t\tcustomClass: {\n\t\t\t\t\t\t\t\t\tconfirmButton: \"btn btn-primary\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}).then(function (result) {\n\t\t\t\t\t\t\t\tif (result.isConfirmed) {\n\t\t\t\t\t\t\t\t\tmodalObject.hide();\n\t\t\t\t\t\t\t\t\tshowOptionsForm();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t//smsForm.submit(); // Submit form\n\t\t\t\t\t\t}, 2000);   \t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Show error message.\n\t\t\t\t\t\tSwal.fire({\n\t\t\t\t\t\t\ttext: \"Sorry, looks like there are some errors detected, please try again.\",\n\t\t\t\t\t\t\ticon: \"error\",\n\t\t\t\t\t\t\tbuttonsStyling: false,\n\t\t\t\t\t\t\tconfirmButtonText: \"Ok, got it!\",\n\t\t\t\t\t\t\tcustomClass: {\n\t\t\t\t\t\t\t\tconfirmButton: \"btn btn-primary\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n        });\n\n        // Handle sms cancelation\n        smsCancelButton.addEventListener('click', function (e) {\n            e.preventDefault();\n            var option = optionsWrapper.querySelector('[name=\"auth_option\"]:checked');\n\n            optionsWrapper.classList.remove('d-none');\n            smsWrapper.classList.add('d-none');\n        });\n    }\n\n    var handleAppsForm = function() {\n\t\t// Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\n\t\tappsValidator = FormValidation.formValidation(\n\t\t\tappsForm,\n\t\t\t{\n\t\t\t\tfields: {\n\t\t\t\t\t'code': {\n\t\t\t\t\t\tvalidators: {\n\t\t\t\t\t\t\tnotEmpty: {\n\t\t\t\t\t\t\t\tmessage: 'Code is required'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tplugins: {\n\t\t\t\t\ttrigger: new FormValidation.plugins.Trigger(),\n\t\t\t\t\tbootstrap: new FormValidation.plugins.Bootstrap5({\n\t\t\t\t\t\trowSelector: '.fv-row',\n                        eleInvalidClass: '',\n                        eleValidClass: ''\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n        // Handle apps submition\n        appsSubmitButton.addEventListener('click', function (e) {\n            e.preventDefault();\n\n\t\t\t// Validate form before submit\n\t\t\tif (appsValidator) {\n\t\t\t\tappsValidator.validate().then(function (status) {\n\t\t\t\t\tconsole.log('validated!');\n\n\t\t\t\t\tif (status == 'Valid') {\n\t\t\t\t\t\tappsSubmitButton.setAttribute('data-kt-indicator', 'on');\n\n\t\t\t\t\t\t// Disable button to avoid multiple click \n\t\t\t\t\t\tappsSubmitButton.disabled = true;\n\n\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\tappsSubmitButton.removeAttribute('data-kt-indicator');\n\n\t\t\t\t\t\t\t// Enable button\n\t\t\t\t\t\t\tappsSubmitButton.disabled = false;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Show success message.\n\t\t\t\t\t\t\tSwal.fire({\n\t\t\t\t\t\t\t\ttext: \"Code has been successfully submitted!\",\n\t\t\t\t\t\t\t\ticon: \"success\",\n\t\t\t\t\t\t\t\tbuttonsStyling: false,\n\t\t\t\t\t\t\t\tconfirmButtonText: \"Ok, got it!\",\n\t\t\t\t\t\t\t\tcustomClass: {\n\t\t\t\t\t\t\t\t\tconfirmButton: \"btn btn-primary\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}).then(function (result) {\n\t\t\t\t\t\t\t\tif (result.isConfirmed) {\n\t\t\t\t\t\t\t\t\tmodalObject.hide();\n\t\t\t\t\t\t\t\t\tshowOptionsForm();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t//appsForm.submit(); // Submit form\n\t\t\t\t\t\t}, 2000);   \t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Show error message.\n\t\t\t\t\t\tSwal.fire({\n\t\t\t\t\t\t\ttext: \"Sorry, looks like there are some errors detected, please try again.\",\n\t\t\t\t\t\t\ticon: \"error\",\n\t\t\t\t\t\t\tbuttonsStyling: false,\n\t\t\t\t\t\t\tconfirmButtonText: \"Ok, got it!\",\n\t\t\t\t\t\t\tcustomClass: {\n\t\t\t\t\t\t\t\tconfirmButton: \"btn btn-primary\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n        });\n\n        // Handle apps cancelation\n        appsCancelButton.addEventListener('click', function (e) {\n            e.preventDefault();\n            var option = optionsWrapper.querySelector('[name=\"auth_option\"]:checked');\n\n            optionsWrapper.classList.remove('d-none');\n            appsWrapper.classList.add('d-none');\n        });\n    }\n\n    // Public methods\n    return {\n        init: function () {\n            // Elements\n            modal = document.querySelector('#kt_modal_two_factor_authentication');\n\n\t\t\tif (!modal) {\n\t\t\t\treturn;\n\t\t\t}\n\n            modalObject = new bootstrap.Modal(modal);\n\n            optionsWrapper = modal.querySelector('[data-kt-element=\"options\"]');\n            optionsSelectButton = modal.querySelector('[data-kt-element=\"options-select\"]');\n\n            smsWrapper = modal.querySelector('[data-kt-element=\"sms\"]');\n            smsForm = modal.querySelector('[data-kt-element=\"sms-form\"]');\n            smsSubmitButton = modal.querySelector('[data-kt-element=\"sms-submit\"]');\n            smsCancelButton = modal.querySelector('[data-kt-element=\"sms-cancel\"]');\n\n            appsWrapper = modal.querySelector('[data-kt-element=\"apps\"]');\n            appsForm = modal.querySelector('[data-kt-element=\"apps-form\"]');\n            appsSubmitButton = modal.querySelector('[data-kt-element=\"apps-submit\"]');\n            appsCancelButton = modal.querySelector('[data-kt-element=\"apps-cancel\"]');\n\n            // Handle forms\n            handleOptionsForm();\n            handleSMSForm();\n            handleAppsForm();\n        }\n    }\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function() {\n    KTModalTwoFactorAuthentication.init();\n});\n\n\n//# sourceURL=webpack://metronic/../demo41/src/js/custom/utilities/modals/two-factor-authentication.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["../demo41/src/js/custom/utilities/modals/two-factor-authentication.js"]();
/******/ 	
/******/ })()
;